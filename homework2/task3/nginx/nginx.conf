worker_processes 1;
events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Define the DNS resolver
    resolver 127.0.0.11;

    server {
        listen       80;
        server_name  localhost;

        # Serve the HTML file
        location / {
            root /usr/local/openresty/nginx/html;
            index index.html;
        }

        # Handle saving the number
        location /save {
            content_by_lua_block {
                local redis = require "resty.redis"
                local red = redis:new()
                red:set_timeout(1000)  -- 1 sec

                -- Connect to Redis
                local ok, err = red:connect("redis", 6379)
                if not ok then
                    ngx.say("Failed to connect to Redis: ", err)
                    return
                end

                -- Get the number from the query parameter
                local number = ngx.var.arg_number

                -- Save the number to Redis with a TTL of 60 seconds
                if number then
                    red:set("saved_number", number)
                    red:expire("saved_number", 60)  -- Set expiration to 60 seconds
                    ngx.status = 200
                    ngx.say("Number saved: ", number)
                else
                    ngx.status = 400
                    ngx.say("No number provided!")
                end

                red:close()
            }
        }

        # Handle retrieving the number
        location /get {
            content_by_lua_block {
                local redis = require "resty.redis"
                local red = redis:new()
                red:set_timeout(1000)  -- 1 sec

                -- Connect to Redis
                local ok, err = red:connect("redis", 6379)
                if not ok then
                    ngx.say("Failed to connect to Redis: ", err)
                    return
                end

                -- Try to get the saved number from Redis
                local res, err = red:get("saved_number")

                if res and res ~= ngx.null then
                    ngx.say(res)
                else
                    ngx.say("")
                end

                red:close()
            }
        }
    }
}
